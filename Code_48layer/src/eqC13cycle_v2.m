function [par, C13, C13x, C13xx] = eqC13cycle_v2(x, par);
% ip is the mapping from x to parameter names (see switch below)
% output: C is model prediction of DIC13,POC13, PIC13, DOC13, DOC13r, DOC13l
% output: Cx partial derivative of C  w.r.t. model parameters x
% output: Cxx hessian matrix of C w.r.t.  model parameters x
    global GC GC13
    on = true; off = false;
    iwet = par.iwet;
    nwet = par.nwet;

    % unpack the parameters to be optimized
    if (par.opt_sigC == on)
        lsigC = x(par.pindx.lsigC);
        sigC  = exp(lsigC);
    else
        sigC  = par.sigC;
    end
    par.sigC = sigC; % pass parameter to C/Si/O models

    % kru
    if (par.opt_kru == on)
        lkru = x(par.pindx.lkru);
        par.kru = exp(lkru) ; 
    end

    % krd
    if (par.opt_krd == on)
        lkrd = x(par.pindx.lkrd);
        par.krd = exp(lkrd) ; 
    end

    % etau 
    if (par.opt_etau == on)
        letau = x(par.pindx.letau) ;
        par.etau = exp(letau) ;
    end

    % etad 
    if (par.opt_etad == on)
        letad = x(par.pindx.letad) ;
        par.etad = exp(letad) ;
    end

    % bC_T
    if (par.opt_bC_T == on)
        par.bC_T = x(par.pindx.bC_T);
    end

    % bC
    if (par.opt_bC == on)
        lbC = x(par.pindx.lbC) ;
        par.bC  = exp(lbC)     ;
    end

    % d
    if (par.opt_d == on)
        ld = x(par.pindx.ld) ;
        par.d = exp(ld)      ;
    end

    % Q10C
    if (par.opt_Q10C == on)
        lQ10C = x(par.pindx.lQ10C) ;
        par.Q10C = exp(lQ10C) ;
    end

    % kdC
    if (par.opt_kdC == on)
        lkdC = x(par.pindx.lkdC) ;
        par.kdC  = exp(lkdC) ;
    end

    % R_Si
    if (par.opt_R_Si == on)
        par.R_Si = x(par.pindx.R_Si);
    end

    % rR
    if (par.opt_rR == on)
        lrR = x(par.pindx.lrR);
        par.rR = exp(lrR);
    end

    % cc
    if (par.opt_cc)
        lcc = x(par.pindx.lcc);
        par.cc = exp(lcc);
    end 

    % dd
    if (par.opt_dd)
        ldd = x(par.pindx.ldd);
        par.dd = exp(ldd);
    end
    %
    options.iprint = 1   ; 
    options.atol = 1e-14 ;
    options.rtol = 1e-13 ;
    fprintf('Solving C13 model ...\n') ;
    X0  = GC13;
    [C13,ierr] = nsnew(X0,@(X) C13_eqn(X, par),options) ; % solve C13 equilibrium state
    par.Cfailure = off ;
    if (ierr ~= 0)
        fprintf('eqC13cycle did not converge.\n') ;
        par.Cfailure = on;
        npx  = par.npx   ;
        ncx  = par.ncx   ;
        nx   = npx + ncx ;
        C13    = GC13 ;
        C13x   = sparse(6*par.nwet, nx) ;
        C13xx  = sparse(6*par.nwet, nchoosek(nx,2)+nx) ;
        [par.G,par.Gx,par.Gxx] = uptake_C(par) ;  % WARNING WARNING
        [F,FD,par] = C13_eqn(C13, par);
    else
        fprintf('reset the global variable for the next call eqCcycle. \n')
        GC13 = real(C13) + 1e-10*randn(6*nwet,1) ;
        F = C13_eqn(C13,par) ;
    end
end

function [F,FD,par,C13x,C13xx] = C13_eqn(X, par)    
% unpack some useful stuff
    on = true; off = false;
    grd   = par.grd   ;
    M3d   = par.M3d   ;
    TRdiv = par.TRdiv ;
    iwet  = par.iwet  ;
    nwet  = par.nwet  ;
    dVt   = par.dVt   ;
    I     = par.I     ;
    % get first layer index
    tmp  = M3d      ;
    tmp(:,:,2:end) = 0     ;
    isrf = find(tmp(iwet)) ;
    
    Tz  = par.Tz ;
    DIC13  = X(0*nwet+1:1*nwet) ; 
    POC13  = X(1*nwet+1:2*nwet) ;
    DOC13  = X(2*nwet+1:3*nwet) ;
    PIC13  = X(3*nwet+1:4*nwet) ;
    % ALK  = X(4*nwet+1:5*nwet) ;
    DOC13l = X(4*nwet+1:5*nwet) ;
    DOC13r = X(5*nwet+1:6*nwet) ;

    R13o = DIC13./(par.DIC); 
    dR13o = d0(1./par.DIC);
    par.c13.R13o = R13o;
    par.c13.dR13o = dR13o;

    PO4 = par.po4obs(iwet) ;
    % fixed parameters
    kappa_p = par.kappa_p;
    kappa_l = par.kappa_l;
    kPIC    = par.kPIC   ;
    gamma = par.gamma    ;
    % parameters need to be optimized
    alpha = par.alpha    ;
    beta  = par.beta     ;
    sigP  = par.sigP     ;
    sigC  = par.sigC     ;
    kru   = par.kru      ;
    krd   = par.krd      ;
    etau  = par.etau     ;
    etad  = par.etad     ; 
    bC_T  = par.bC_T     ;
    bC    = par.bC       ;
    d     = par.d        ;
    Q10C  = par.Q10C     ;
    kdC   = par.kdC      ;
    R_Si  = par.R_Si     ;
    rR    = par.rR       ;
    cc    = par.cc       ;
    dd    = par.dd       ;
    pme   = par.pme      ;
    % PIC to POC rain ratio 
    vout  = mkPIC2P(par) ;
    RR    = vout.RR      ;
    RR_Si = vout.RR_Si   ;
    RR_rR = vout.RR_rR   ;
    clear vout 
    % kappa_dc ;
    tf    = (par.vT - 30)/10 ;
    kC    = d0( kdC * Q10C .^ tf ) ;
    C2P   = 1./(cc*PO4 + dd) ;
    N2C   = 18/106 ; %16/117 ; 
    par.C2P = C2P  ;

    % particle flux div_rergence [s^-1];
    PFDa = buildPFD_48layer(par, 'PIC') ;
    PFDc = buildPFD_48layer(par, 'POC') ;
    par.PFDa = PFDa ;
    par.PFDc = PFDc ;
    par.DIC13  = DIC13  ;
        
    % temperature (in C)-dependent equilibrium fractionation factor from gaseous CO2 to DIC.
    % par.c13.alpha_g2dic = 1.01051-1.05*1e-4*par.Temp(isrf); 
    disp(sprintf('air-sea fractionation tuned by par.fras = %4.2f',par.fras));
    par.c13.alpha_g2dic = (1.01051-1.05*1e-4*par.Temp-1.0)*par.fras + 1.0; 
    
    % Air-Sea gas exchange for total C
    vout    = Fsea2air(par, 'CO2');
    G_dic   = vout.G_dic ;
    G_alk   = vout.G_alk ;
    JgDIC   = vout.JgDIC ;
    co2surf = vout.co2surf;
    clear vout;
    
    % the equilibrium fractionation factor from aqueous CO2 to particulate organic carbon (POC) 
    co2 = M3d; nz = size(M3d,3);
    % co2(:,:,1) = co2surf; co2 = co2(:,:,ones(nz,1)); 
    co2((iwet(isrf))) = co2surf; co2 = co2(:,:,ones(nz,1)); 
    % WARNING: we should resolve the CO2 system at  all the layers  where we have
    % biological production. For now we approximate the CO2 at all layers
    % using co2surf. 
    
    alpha_aq2poc = -0.017*log(co2) + 1.0034; % check the unit of co2surf
    alpha_tmp = ( par.c13.alpha_g2aq ./ par.c13.alpha_g2dic ) .* alpha_aq2poc; 
    disp(sprintf('photosynthesis fractionation tuned by par.frpho = %4.2f',par.frpho));
    alpha_dic2poc = (alpha_tmp(iwet)-1.0)*par.frpho + 1.0;
    par.c13.alpha_aq2poc  = alpha_aq2poc   ;
    par.c13.alpha_tmp     = alpha_tmp      ;
    par.c13.alpha_dic2poc = alpha_dic2poc  ;

    if par.debug13
      disp('Testing fractionation factors')
      par.c13.alpha_k = 1;%0.99915; % kenetic fractionation factor 
      par.c13.alpha_g2aq = 1;%0.998764; % gas to water fractionation factor
      par.c13.alpha_g2dic = 1.01051*0 - 1.05*1e-4*par.Temp*0 + 1;
      alpha_dic2poc = alpha_dic2poc*0 + 1.0; % debug
    end
	
    % Air-Sea gas exchange for C13
    vout  = Fsea2air(par, 'C13');
    JgDIC13 = vout.JgDIC13;
    G_dic13 = vout.G_dic13;
    rhs13 = vout.rhs13;
    clear vout

    % biological DIC uptake operator
    G = uptake_C(par)  ; par.G = G ;
     
    kappa_g = par.kappa_g ;
    ALKbar  = par.ALKbar  ;
    sDICbar = par.sDICbar ;
    sALKbar = par.sALKbar ;

    UM = par.UM ; 
    DM = par.DM ;
    WM = par.WM ;
    kappa_r =  kru*UM +  krd*DM ;
    eta     =  etau*WM ;
    % eta     = etau*UM + etad*DM ;

    eq1 = TRdiv*DIC13 ...                         % advective-diffusive transport
          + d0(par.Cnpp(iwet).*alpha_dic2poc)*R13o...     % removal of dic13 organic c13 production
          + (1-sigC-gamma)*RR*G*d0(C2P)*R13o  ... % removal of dic13 due to pic13 production
          - kPIC*PIC13 ....          % dissolution of PIC13
          - JgDIC13 ...              % air-sea gas exchange
          + sDICbar*d0(pme)*R13o ... % concentration and dillution due to precip and evaporation
          - eta*(kC*DOC13) ...       % respiration of DOC13
          - kappa_r*DOC13r ...       % respiration of DOC13r
          - kappa_l*DOC13l...        % respiration of DOC13l
          - kappa_p*POC13 ;          % respiration of PCO13

    eq2 = (PFDc+kappa_p*I)*POC13 - (1-sigC-gamma)*G*d0(C2P.*alpha_dic2poc)*R13o;   ; % FPOC

    eq3 = (TRdiv+kC)*DOC13 - sigC*G*d0(C2P.*alpha_dic2poc)*R13o  ; % FDOC

    eq4 = (PFDa + kPIC*I)*PIC13 - (1-sigC-gamma)*RR*G*d0(C2P)*R13o ; % FPIC

    eq5 = (TRdiv+kappa_l*I)*DOC13l - d0((par.Cnpp(iwet)-G*C2P).*alpha_dic2poc)*R13o ;  % DOCl 

    eq6 = (TRdiv+kappa_r)*DOC13r - kC*DOC13 + eta*kC*DOC13 ; % DOCr 

    F   = [eq1; eq2; eq3; eq4; eq5; eq6];
    
    % construct the LHS matrix for the offline model
    % disp('Preparing LHS and RHS matrix:')
    % colum 1 dFdDIC13
    Jc{1,1} = TRdiv + d0(par.Cnpp(iwet).*alpha_dic2poc)*dR13o ...
              + (1-sigC-gamma)*RR*G*d0(C2P)*dR13o ...
              - G_dic13 ...
              + sDICbar*d0(pme)*dR13o; 
    Jc{2,1} = - (1-sigC-gamma)*G*d0(C2P.*alpha_dic2poc)*dR13o;
    Jc{3,1} = - sigC*G*d0(C2P.*alpha_dic2poc)*dR13o; 
    Jc{4,1} = - (1-sigC-gamma)*RR*G*d0(C2P)*dR13o ;
    Jc{5,1} = - d0((par.Cnpp(iwet)-G*C2P).*alpha_dic2poc)*dR13o ; 
    Jc{6,1} = 0*I ;
    % colum 2 dFdPOC13
    Jc{1,2} = -kappa_p*I ;
    Jc{2,2} = PFDc + kappa_p*I ;
    Jc{3,2} = 0*I ;
    Jc{4,2} = 0*I ;
    Jc{5,2} = 0*I ;
    Jc{6,2} = 0*I ;
    % colum 3 dFdDOC13
    Jc{1,3} = -eta*kC ;
    Jc{2,3} = 0*I ;
    Jc{3,3} = TRdiv + kC ;
    Jc{4,3} = 0*I ;
    Jc{5,3} = 0*I ;
    Jc{6,3} = -kC*I + eta*kC*I;
    % colum 4 dFdPIC13
    Jc{1,4} = -kPIC*I ;
    Jc{2,4} = 0*I ;
    Jc{3,4} = 0*I ;
    Jc{4,4} = PFDa + kPIC*I ;
    Jc{5,4} = 0*I ;
    Jc{6,4} = 0*I;
    % column 6 dFdDOC13l
    Jc{1,5} = -kappa_l*I ;
    Jc{2,5} = 0*I ;
    Jc{3,5} = 0*I ;
    Jc{4,5} = 0*I ;
    Jc{5,5} = TRdiv + kappa_l*I ;
    Jc{6,5} = 0*I ;
    % column 6 dFdDOC13r
    Jc{1,6} = -kappa_r;
    Jc{2,6} = 0*I ;
    Jc{3,6} = 0*I ;
    Jc{4,6} = 0*I ;
    Jc{5,6} = 0*I ;
    Jc{6,6} = TRdiv + kappa_r ;
    if nargout > 1
      % factorize Jacobian matrix
      FD = mfactor(cell2mat(Jc)) ;
    end 
    
    %%--------------gradient---------------
    if (par.optim == off)
        Cx = [];
    elseif (par.optim & nargout > 3)
        pindx = par.pindx ;
        Z = sparse(nwet,1);
        C2P_cc = -PO4./(cc*PO4 + dd).^2;
        C2P_dd = -1./(cc*PO4 + dd).^2;
        par.C2P_cc = C2P_cc;
        par.C2P_dd = C2P_dd;
        [~,Gx] = uptake_C(par);
        par.Gx = Gx;
        npx    = par.npx;
        % P model parameters
        % sigP
        if (par.opt_sigP == on)
            tmp = [-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lsigP))*C2P; ...
                   d0((1-sigC-gamma)*Gx(:,pindx.lsigP))*C2P; ...
                   d0(sigC*Gx(:,pindx.lsigP))*C2P; ...
                   d0((1-sigC-gamma)*RR*Gx(:,pindx.lsigP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lsigP))*C2P + ...
                   d0(N2C*Gx(:,pindx.lsigP))*C2P; ...
                   d0(gamma*Gx(:,pindx.lsigP))*C2P; ...
                   Z] ;
            
            Cx(:,pindx.lsigP) = mfactor(FD, tmp)  ;
        end

        % Q10P
        if (par.opt_Q10P == on)
            tmp = [-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lQ10P))*C2P; ...
                   d0((1-sigC-gamma)*Gx(:,pindx.lQ10P))*C2P; ...
                   d0(sigC*Gx(:,pindx.lQ10P))*C2P; ...
                   d0((1-sigC-gamma)*RR*Gx(:,pindx.lQ10P))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lQ10P))*C2P + ...
                   d0(N2C*Gx(:,pindx.lQ10P))*C2P; ...
                   d0(gamma*Gx(:,pindx.lQ10P))*C2P; ...
                   Z];
            
            Cx(:,pindx.lQ10P) = mfactor(FD, tmp);
        end
        
        % kdP
        if (par.opt_kdP == on)
            tmp = [-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lkdP))*C2P; ...
                   d0((1-sigC-gamma)*Gx(:,pindx.lkdP))*C2P; ...
                   d0(sigC*Gx(:,pindx.lkdP))*C2P; ...
                   d0((1-sigC-gamma)*RR*Gx(:,pindx.lkdP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lkdP))*C2P + ...
                   d0(N2C*Gx(:,pindx.lkdP))*C2P; ...
                   d0(gamma*Gx(:,pindx.lkdP))*C2P; ...
                   Z];
            
            Cx(:,pindx.lkdP) = mfactor(FD, tmp);
        end
        
        % bP_T
        if (par.opt_bP_T == on)
            tmp = [-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.bP_T))*C2P; ...
                   d0((1-sigC-gamma)*Gx(:,pindx.bP_T))*C2P; ...
                   d0(sigC*Gx(:,pindx.bP_T))*C2P; ...
                   d0((1-sigC-gamma)*RR*Gx(:,pindx.bP_T))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.bP_T))*C2P + ...
                   d0(N2C*Gx(:,pindx.bP_T))*C2P; ...
                   d0(gamma*Gx(:,pindx.bP_T))*C2P; ...
                   Z];
            
            Cx(:,pindx.bP_T) = mfactor(FD, tmp);
        end
        
        % bP
        if (par.opt_bP == on)
            tmp = [-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lbP))*C2P;...
                   d0((1-sigC-gamma)*Gx(:,pindx.lbP))*C2P;...
                   d0(sigC*Gx(:,pindx.lbP))*C2P;...
                   d0((1-sigC-gamma)*RR*Gx(:,pindx.lbP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lbP))*C2P + ...
                   d0(N2C*Gx(:,pindx.lbP))*C2P; ...
                   d0(gamma*Gx(:,pindx.lbP))*C2P; ...
                   Z];
            
            Cx(:,pindx.lbP) = mfactor(FD, tmp);
        end
        
        % alpha
        if (par.opt_alpha == on)
            tmp = [-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lalpha))*C2P; ...
                   d0((1-sigC-gamma)*Gx(:,pindx.lalpha))*C2P; ...
                   d0(sigC*Gx(:,pindx.lalpha))*C2P; ...
                   d0((1-sigC-gamma)*RR*Gx(:,pindx.lalpha))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lalpha))*C2P + ...
                   d0(N2C*Gx(:,pindx.lalpha))*C2P; ...
                   d0(gamma*Gx(:,pindx.lalpha))*C2P; ...
                   Z];
            
            Cx(:,pindx.lalpha) = mfactor(FD, tmp);
        end
        
        % beta
        if (par.opt_beta == on)
            tmp = [-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lbeta))*C2P;...
                   d0((1-sigC-gamma)*Gx(:,pindx.lbeta))*C2P;...
                   d0(sigC*Gx(:,pindx.lbeta))*C2P;...
                   d0((1-sigC-gamma)*RR*Gx(:,pindx.lbeta))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lbeta))*C2P + ...
                   d0(N2C*Gx(:,pindx.lbeta))*C2P; ...
                   d0(gamma*Gx(:,pindx.lbeta))*C2P; ...
                   Z];
            
            Cx(:,pindx.lbeta) = mfactor(FD, tmp);
        end
        % -------------------- C parameters ------------------
        % sigC
        if (par.opt_sigC == on)
            tmp = [sigC*RR*G*C2P  ; ...
                   -sigC*G*C2P    ; ...
                   sigC*G*C2P     ; ...
                   -sigC*RR*G*C2P ; ...
                   2*sigC*RR*G*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cx(:,pindx.lsigC) = mfactor(FD, tmp);
        end
        % kru 
        if (par.opt_kru == on)
            tmp = kru*[UM*DOCr; Z; Z; Z; -N2C*UM*DOCr; Z; -UM*DOCr];
            
            Cx(:,pindx.lkru) = mfactor(FD, tmp);
        end
        
        % krd 
        if (par.opt_krd == on)
            tmp = krd*[DM*DOCr; Z; Z; Z; -N2C*DM*DOCr; Z; -DM*DOCr];
            
            Cx(:,pindx.lkrd) = mfactor(FD, tmp);
        end

        % etau 
        if (par.opt_etau == on)
            tmp = [etau*WM*(kC*DOC); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etau*WM*N2C*(kC*DOC); ...
                   Z; ...
                   -etau*WM*(kC*DOC)];
            
            Cx(:,pindx.letau) = mfactor(FD, tmp);
        end

        % etad 
        if (par.opt_etad == on)
            tmp = [etad*DM*(kC*DOC); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etad*N2C*DM*(kC*DOC); ...
                   Z; ...
                   -etad*DM*(kC*DOC)];
            
            Cx(:,pindx.letad) = mfactor(FD, tmp);
        end

        % bC_T
        if (par.opt_bC_T == on)
            [~,Gout]   = buildPFD(par,'POC');
            PFD_bm     = Gout.PFD_bm;
            par.PFD_bm = PFD_bm;
            tmp = [Z; -PFD_bm*POC; Z;  Z; Z; Z; Z];
            
            Cx(:,pindx.bC_T) = mfactor(FD, tmp);
        end
        
        % bC
        if (par.opt_bC == on)
            [~,Gout]   = buildPFD(par,'POC');
            PFD_bb     = Gout.PFD_bb;
            par.PFD_bb = PFD_bb;
            tmp = bC*[Z; -PFD_bb*POC; Z; Z; Z; Z; Z];
            
            Cx(:,pindx.lbC) = mfactor(FD, tmp);
        end

        % d
        if (par.opt_d == on)
            [~,Gout]  = buildPFD(par,'PIC');
            PFD_d     = Gout.PFD_d;
            par.PFD_d = PFD_d;
            tmp = d*[Z; Z; Z; -PFD_d*PIC; Z; Z; Z];
            
            Cx(:,pindx.ld) = mfactor(FD, tmp);
        end

        % Q10C
        if (par.opt_Q10C == on)
            kC_Q10C = kdC * Q10C .* Q10C.^(tf - 1) .* tf ; 
            par.kC_Q10C = kC_Q10C ;
            tmp = [eta*d0(kC_Q10C)*DOC; ...
                   Z; ...
                   -d0(kC_Q10C)*DOC; ...
                   Z; ...
                   -eta*N2C*d0(kC_Q10C)*DOC; ...
                   Z; ...
                   (I-eta)*d0(kC_Q10C)*DOC];
            
            Cx(:,pindx.lQ10C) = mfactor(FD, tmp);
        end
        
        % kdC
        if (par.opt_kdC == on)
            kC_kdC = kdC * d0(Q10C.^tf) ;
            par.kC_kdC = kC_kdC;
            tmp = [eta*kC_kdC*DOC; ...
                   Z; ...
                   -kC_kdC*DOC; ...
                   Z;  ...
                   -eta*N2C*kC_kdC*DOC; ...
                   Z; ...
                   (I-eta)*kC_kdC*DOC];
            
            Cx(:,pindx.lkdC) = mfactor(FD, tmp);
        end

        % R_Si
        if (par.opt_R_Si == on)
            tmp = [-(1-sigC-gamma)*RR_Si*(G*C2P); ...
                   Z; ...
                   Z; ...
                   (1-sigC-gamma)*RR_Si*(G*C2P); ...
                   -2*(1-sigC-gamma)*RR_Si*(G*C2P); ...
                   Z; ...
                   Z ];
            
            Cx(:,pindx.R_Si) = mfactor(FD, tmp);
        end
        
        % rR
        if (par.opt_rR == on)
            tmp = [-(1-sigC-gamma)*RR_rR*(G*C2P); ...
                   Z; ...
                   Z; ...
                   (1-sigC-gamma)*RR_rR*(G*C2P); ...
                   -2*(1-sigC-gamma)*RR_rR*(G*C2P); ...
                   Z; ...
                   Z];
            
            Cx(:,pindx.lrR) = mfactor(FD, tmp);
        end
        
        % cc
        if (par.opt_cc == on)
            tmp = cc*[-(I+(1-sigC-gamma)*RR)*(G*C2P_cc); ...
                      (1-sigC-gamma)*G*C2P_cc; ...
                      sigC*G*C2P_cc; ...
                      (1-sigC-gamma)*RR*(G*C2P_cc); ...
                      -2*(1-sigC-gamma)*RR*(G*C2P_cc) + N2C*G*C2P_cc; ...
                      gamma*G*C2P_cc; ...
                      Z];
            
            Cx(:,pindx.lcc) = mfactor(FD, tmp);
        end
        
        % dd
        if (par.opt_dd == on)
            tmp = dd*[-(I+(1-sigC-gamma)*RR)*(G*C2P_dd); ...
                      (1-sigC-gamma)*G*C2P_dd; ...
                      sigC*G*C2P_dd; ...
                      (1-sigC-gamma)*RR*(G*C2P_dd); ...
                      -2*(1-sigC-gamma)*RR*(G*C2P_dd) + N2C*G*C2P_dd; ...
                      gamma*G*C2P_dd; ...
                      Z];
            
            Cx(:,pindx.ldd) = mfactor(FD, tmp);
        end
    end

    if (par.optim == off)
        Cxx = [];
    elseif (par.optim & nargout > 4);
        p2c       = cc*PO4 + dd;
        C2P_dd_dd = 2./p2c.^3;
        C2P_cc_cc = (2*PO4.^2)./p2c.^3;
        C2P_cc_dd = (2*PO4)./p2c.^3;
        par.C2P_cc_cc = C2P_cc_cc;
        par.C2P_cc_dd = C2P_cc_dd;
        par.C2P_dd_dd = C2P_dd_dd;
        [~,~,Gxx] = uptake_C(par);
        par.Gxx   = Gxx;
        DICx  = Cx(0*nwet+1:1*nwet,:);
        POCx  = Cx(1*nwet+1:2*nwet,:);
        DOCx  = Cx(2*nwet+1:3*nwet,:);
        PICx  = Cx(3*nwet+1:4*nwet,:);
        ALKx  = Cx(4*nwet+1:5*nwet,:);
        DOClx = Cx(5*nwet+1:6*nwet,:);
        DOCrx = Cx(6*nwet+1:7*nwet,:);
        % ------------------------------------------------------
        % P model only parameters
        kk = 0;
        for jj = 1:npx
            for jk = jj:npx
                kk = kk + 1;
                % sigC foo
                tmp = [-d0((I+(1-sigC-gamma)*RR)*Gxx(:,kk))*C2P; ...
                       d0((1-sigC-gamma)*Gxx(:,kk))*C2P; ...
                       d0(sigC*Gxx(:,kk))*C2P; ...
                       d0((1-sigC-gamma)*RR*Gxx(:,kk))*C2P; ...
                       d0(-2*(1-sigC-gamma)*RR*Gxx(:,kk))*C2P + ...
                       d0(N2C*Gxx(:,kk))*C2P; ...
                       d0(gamma*Gxx(:,kk))*C2P; ...
                       Z];
                
                Cxx(:,kk) = mfactor(FD, tmp);
            end 
        end
        
        % ------------------------------------------------------
        % P and  C model parameters
        % sigP sigC
        if (par.opt_sigP & par.opt_sigC)
            kk  = kk + 1;
            tmp = [+sigC*d0(RR*Gx(:,pindx.lsigP))*C2P  ; ...
	           -sigC*d0(Gx(:,pindx.lsigP))*C2P    ; ...
                   +sigC*d0(Gx(:,pindx.lsigP))*C2P     ; ...
                   -sigC*d0(RR*Gx(:,pindx.lsigP))*C2P ; ...
	           2*sigC*d0(RR*Gx(:,pindx.lsigP))*C2P; ...
                   Z ; ...
	           Z] ;
            
	    Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigP kru
        if (par.opt_sigP & par.opt_kru)
            kk  = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lsigP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lsigP); ...
                   Z; ...
                   -kru*UM*DOCrx(:,pindx.lsigP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigP krd
        if (par.opt_sigP & par.opt_krd)
            kk  = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lsigP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lsigP); ...
                   Z; ...
                   -krd*DM*DOCrx(:,pindx.lsigP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigP etau
        if (par.opt_sigP & par.opt_etau)
            kk  = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lsigP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lsigP); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lsigP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigP etad
        if (par.opt_sigP & par.opt_etad)
            kk  = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lsigP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lsigP); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lsigP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigP bC_T
        if (par.opt_sigP & par.opt_bC_T)
            kk  = kk + 1;
            tmp =  [Z; ...
                    -PFD_bm*POCx(:,pindx.lsigP) ; ...
                    Z; ...
                    Z; ...
                    Z; ...
                    Z; ...
                    Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigP bC
        if (par.opt_sigP & par.opt_bC)
            kk = kk + 1;
            tmp =  [Z ; ...
                    -bC*PFD_bb*POCx(:,pindx.lsigP); ...
                    Z ; ...
                    Z ; ...
                    Z ; ...
                    Z ; ...
                    Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigP d
        if (par.opt_sigP & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lsigP); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigP Q10C
        if (par.opt_sigP & par.opt_Q10C)
            kk  = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lsigP); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lsigP); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lsigP); ...
                   Z; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lsigP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigP kdC
        if (par.opt_sigP & par.opt_kdC)
            kk  = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lsigP); ...
                   Z; ...
                   -kC_kdC*DOCx(:,pindx.lsigP); ...
                   Z; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lsigP); ...
                   Z; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lsigP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigP R_Si
        if (par.opt_sigP & par.opt_R_Si)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lsigP))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lsigP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_Si*Gx(:,pindx.lsigP))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigP rR
        if (par.opt_sigP & par.opt_rR)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lsigP))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lsigP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_rR*Gx(:,pindx.lsigP))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigP cc
        if (par.opt_sigP & par.opt_cc)
            kk  = kk + 1;
            tmp = cc*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lsigP))*C2P_cc; ...
                      d0((1-sigC-gamma)*Gx(:,pindx.lsigP))*C2P_cc; ... 
                      d0(sigC*Gx(:,pindx.lsigP))*C2P_cc; ... 
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lsigP))*C2P_cc; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lsigP))*C2P_cc + ...
                      d0(N2C*Gx(:,pindx.lsigP))*C2P_cc; ...
                      d0(gamma*Gx(:,pindx.lsigP))*C2P_cc; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigP dd
        if (par.opt_sigP & par.opt_dd)
            kk  = kk + 1;
            tmp = dd*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lsigP))*C2P_dd; ...
                      d0((1-sigC-gamma)*Gx(:,pindx.lsigP))*C2P_dd; ...
                      d0(sigC*Gx(:,pindx.lsigP))*C2P_dd; ... 
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lsigP))*C2P_dd; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lsigP))*C2P_dd + ...
                      d0(N2C*Gx(:,pindx.lsigP))*C2P_dd; ...
                      d0(gamma*Gx(:,pindx.lsigP))*C2P_dd; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P sigC
        if (par.opt_Q10P & par.opt_sigC)
            kk  = kk + 1;
            tmp = [+sigC*d0(RR*Gx(:,pindx.lQ10P))*C2P  ; ...
                   -sigC*d0(Gx(:,pindx.lQ10P))*C2P    ; ...
	           +sigC*d0(Gx(:,pindx.lQ10P))*C2P     ; ...
                   -sigC*d0(RR*Gx(:,pindx.lQ10P))*C2P ; ...
                   2*sigC*d0(RR*Gx(:,pindx.lQ10P))*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % Q10P kru
        if (par.opt_Q10P & par.opt_kru)
            kk  = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lQ10P); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lQ10P); ...
                   Z; ...
                   -kru*UM*DOCrx(:,pindx.lQ10P)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % Q10P krd
        if (par.opt_Q10P & par.opt_krd)
            kk  = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lQ10P); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lQ10P); ...
                   Z; ...
                   -krd*DM*DOCrx(:,pindx.lQ10P)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % Q10P etau
        if (par.opt_Q10P & par.opt_etau)
            kk  = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lQ10P); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lQ10P)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % Q10P etad
        if (par.opt_Q10P & par.opt_etad)
            kk  = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lQ10P); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lQ10P)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % Q10P bC_T
        if (par.opt_Q10P & par.opt_bC_T)
            kk  = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.lQ10P); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P bC
        if (par.opt_Q10P & par.opt_bC)
            kk = kk + 1;
            tmp = [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.lQ10P); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P d
        if (par.opt_Q10P & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lQ10P); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P Q10C
        if (par.opt_Q10P & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lQ10P)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P kdC
        if (par.opt_Q10P & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lQ10P); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lQ10P)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P R_Si
        if (par.opt_Q10P & par.opt_R_Si)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lQ10P))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lQ10P))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_Si*Gx(:,pindx.lQ10P))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P RR_rR
        if (par.opt_Q10P & par.opt_rR)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lQ10P))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lQ10P))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_rR*Gx(:,pindx.lQ10P))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P cc
        if (par.opt_Q10P & par.opt_cc)
            kk = kk + 1;
            tmp = cc*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lQ10P))*C2P_cc; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lQ10P))*C2P_cc; ...
                      sigC*d0(Gx(:,pindx.lQ10P))*C2P_cc; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lQ10P))*C2P_cc; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lQ10P))*C2P_cc + ...
                      d0(N2C*Gx(:,pindx.lQ10P))*C2P_cc; ...
                      gamma*d0(Gx(:,pindx.lQ10P))*C2P_cc; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10P dd
        if (par.opt_Q10P & par.opt_dd)
            kk = kk + 1;
            tmp = dd*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lQ10P))*C2P_dd; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lQ10P))*C2P_dd; ...
                      sigC*d0(Gx(:,pindx.lQ10P))*C2P_dd; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lQ10P))*C2P_dd; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lQ10P))*C2P_dd + ...
                      d0(N2C*Gx(:,pindx.lQ10P))*C2P_dd; ...
                      gamma*d0(Gx(:,pindx.lQ10P))*C2P_dd; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP sigC
        if (par.opt_kdP & par.opt_sigC)
            kk  = kk + 1;
            tmp = [+sigC*d0(RR*Gx(:,pindx.lkdP))*C2P  ; ...
                   -sigC*d0(Gx(:,pindx.lkdP))*C2P    ; ...
	           +sigC*d0(Gx(:,pindx.lkdP))*C2P     ; ...
                   -sigC*d0(RR*Gx(:,pindx.lkdP))*C2P ; ...
                   2*sigC*d0(RR*Gx(:,pindx.lkdP))*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP kru
        if (par.opt_kdP & par.opt_kru)
            kk  = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lkdP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lkdP); ...
                   Z; ...
                   -kru*UM*DOCrx(:,pindx.lkdP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kdP krd
        if (par.opt_kdP & par.opt_krd)
            kk  = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lkdP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lkdP); ...
                   Z; ...
                   -krd*DM*DOCrx(:,pindx.lkdP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kdP etau
        if (par.opt_kdP & par.opt_etau)
            kk  = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lkdP); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lkdP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kdP etad
        if (par.opt_kdP & par.opt_etad)
            kk  = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lkdP); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lkdP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kdP bC_T
        if (par.opt_kdP & par.opt_bC_T)
            kk = kk + 1;
            tmp =  [Z ; ...
                    -PFD_bm*POCx(:,pindx.lkdP); ...
                    Z ; ...
                    Z ; ...
                    Z ; ...
                    Z ; ...
                    Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP bC
        if (par.opt_kdP & par.opt_bC)
            kk = kk + 1;
            tmp = [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.lkdP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP d
        if (par.opt_kdP & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lkdP); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP Q10C
        if (par.opt_kdP & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lkdP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP kdC
        if (par.opt_kdP & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lkdP); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lkdP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP R_Si
        if (par.opt_kdP & par.opt_R_Si)
            kk  = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lkdP))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lkdP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_Si*Gx(:,pindx.lkdP))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP rR
        if (par.opt_kdP & par.opt_rR)
            kk  = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lkdP))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lkdP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_rR*Gx(:,pindx.lkdP))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP cc
        if (par.opt_kdP & par.opt_cc)
            kk  = kk + 1;
            tmp = cc*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lkdP))*C2P_cc; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lkdP))*C2P_cc; ...
                      sigC*d0(Gx(:,pindx.lkdP))*C2P_cc; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lkdP))*C2P_cc; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lkdP))*C2P_cc + ...
                      d0(N2C*Gx(:,pindx.lkdP))*C2P_cc; ...
                      gamma*d0(Gx(:,pindx.lkdP))*C2P_cc; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdP dd
        if (par.opt_kdP & par.opt_dd)
            kk  = kk + 1;
            tmp = dd*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lkdP))*C2P_dd; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lkdP))*C2P_dd; ...
                      sigC*d0(Gx(:,pindx.lkdP))*C2P_dd; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lkdP))*C2P_dd; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lkdP))*C2P_dd + ...
                      d0(N2C*Gx(:,pindx.lkdP))*C2P_dd; ...
                      gamma*d0(Gx(:,pindx.lkdP))*C2P_dd; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T sigC
        if (par.opt_bP_T & par.opt_sigC)
            kk  = kk + 1;
            tmp = [+sigC*d0(RR*Gx(:,pindx.bP_T))*C2P  ; ...
                   -sigC*d0(Gx(:,pindx.bP_T))*C2P    ; ...
	           +sigC*d0(Gx(:,pindx.bP_T))*C2P     ; ...
                   -sigC*d0(RR*Gx(:,pindx.bP_T))*C2P ; ...
                   2*sigC*d0(RR*Gx(:,pindx.bP_T))*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T kru
        if (par.opt_bP_T & par.opt_kru)
            kk  = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.bP_T); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.bP_T); ...
                   Z; ...
                   -kru*UM*DOCrx(:,pindx.bP_T)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP_T krd
        if (par.opt_bP_T & par.opt_krd)
            kk  = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.bP_T); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.bP_T); ...
                   Z; ...
                   -krd*DM*DOCrx(:,pindx.bP_T)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP_T etau
        if (par.opt_bP_T & par.opt_etau)
            kk  = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.bP_T); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.bP_T)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP_T etad
        if (par.opt_bP_T & par.opt_etad)
            kk  = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.bP_T); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.bP_T)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP_T bC_T
        if (par.opt_bP_T & par.opt_bC_T)
            kk  = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.bP_T); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T bC
        if (par.opt_bP_T & par.opt_bC)
            kk = kk + 1;
            tmp = [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.bP_T); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T d
        if (par.opt_bP_T & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.bP_T); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T Q10C
        if (par.opt_bP_T & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.bP_T)];
                   
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T kdC
        if (par.opt_bP_T & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.bP_T); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.bP_T)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T R_Si
        if (par.opt_bP_T & par.opt_R_Si)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.bP_T))*C2P ; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.bP_T))*C2P ; ...
                   d0(-2*(1-sigC-gamma)*RR_Si*Gx(:,pindx.bP_T))*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T rR
        if (par.opt_bP_T & par.opt_rR)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.bP_T))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.bP_T))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_rR*Gx(:,pindx.bP_T))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T cc
        if (par.opt_bP_T & par.opt_cc)
            kk = kk + 1;
            tmp = cc*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.bP_T))*C2P_cc; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.bP_T))*C2P_cc; ...
                      sigC*d0(Gx(:,pindx.bP_T))*C2P_cc; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.bP_T))*C2P_cc; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.bP_T))*C2P_cc + ...
                      d0(N2C*Gx(:,pindx.bP_T))*C2P_cc; ...
                      gamma*d0(Gx(:,pindx.bP_T))*C2P_cc; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP_T dd
        if (par.opt_bP_T & par.opt_dd)
            kk = kk + 1;
            tmp = dd*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.bP_T))*C2P_dd; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.bP_T))*C2P_dd; ...
                      sigC*d0(Gx(:,pindx.bP_T))*C2P_dd; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.bP_T))*C2P_dd; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.bP_T))*C2P_dd + ...
                      d0(N2C*Gx(:,pindx.bP_T))*C2P_dd; ...
                      gamma*d0(Gx(:,pindx.bP_T))*C2P_dd; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP sigC
        if (par.opt_bP & par.opt_sigC)
            kk  = kk + 1;
            tmp = [+sigC*d0(RR*Gx(:,pindx.lbP))*C2P  ; ...
                   -sigC*d0(Gx(:,pindx.lbP))*C2P    ; ...
	           +sigC*d0(Gx(:,pindx.lbP))*C2P     ; ...
                   -sigC*d0(RR*Gx(:,pindx.lbP))*C2P ; ...
                   2*sigC*d0(RR*Gx(:,pindx.lbP))*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP kru
        if (par.opt_bP & par.opt_kru)
            kk  = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lbP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lbP); ...
                   Z; ...
                   -kru*UM*DOCrx(:,pindx.lbP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP krd
        if (par.opt_bP & par.opt_krd)
            kk  = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lbP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lbP); ...
                   Z; ...
                   -krd*DM*DOCrx(:,pindx.lbP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP etau
        if (par.opt_bP & par.opt_etau)
            kk  = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lbP); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lbP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP etad
        if (par.opt_bP & par.opt_etad)
            kk  = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lbP); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lbP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % bP bC_T
        if (par.opt_bP & par.opt_bC_T)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.lbP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP bC
        if (par.opt_bP & par.opt_bC)
            kk = kk + 1;
            tmp = [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.lbP); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP d
        if (par.opt_bP & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lbP); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP Q10C
        if (par.opt_bP & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lbP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP kdC
        if (par.opt_bP & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lbP); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lbP)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP R_Si
        if (par.opt_bP & par.opt_R_Si)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lbP))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lbP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_Si*Gx(:,pindx.lbP))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP rR
        if (par.opt_bP & par.opt_rR)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lbP))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lbP))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_rR*Gx(:,pindx.lbP))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP cc
        if (par.opt_bP & par.opt_cc)
            kk = kk + 1;
            tmp = cc*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lbP))*C2P_cc; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lbP))*C2P_cc;...
                      sigC*d0(Gx(:,pindx.lbP))*C2P_cc;...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lbP))*C2P_cc; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lbP))*C2P_cc + ...
                      d0(N2C*Gx(:,pindx.lbP))*C2P_cc ; ...
                      gamma*d0(Gx(:,pindx.lbP))*C2P_cc;...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bP dd
        if (par.opt_bP & par.opt_dd)
            kk = kk + 1;
            tmp = dd*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lbP))*C2P_dd; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lbP))*C2P_dd;...
                      sigC*d0(Gx(:,pindx.lbP))*C2P_dd;...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lbP))*C2P_dd; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lbP))*C2P_dd + ...
                      d0(N2C*Gx(:,pindx.lbP))*C2P_dd; ...
                      gamma*d0(Gx(:,pindx.lbP))*C2P_dd;...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % alpha sigC
        if (par.opt_alpha & par.opt_sigC)
            kk  = kk + 1;
            tmp = [+sigC*d0(RR*Gx(:,pindx.lalpha))*C2P  ; ...
                   -sigC*d0(Gx(:,pindx.lalpha))*C2P    ; ...
	           +sigC*d0(Gx(:,pindx.lalpha))*C2P     ; ...
                   -sigC*d0(RR*Gx(:,pindx.lalpha))*C2P ; ...
                   2*sigC*d0(RR*Gx(:,pindx.lalpha))*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
          
        % alpha kru
        if (par.opt_alpha & par.opt_kru)
            kk  = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lalpha); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lalpha); ...
                   Z; ...
                   -kru*UM*DOCrx(:,pindx.lalpha)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha krd
        if (par.opt_alpha & par.opt_krd)
            kk  = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lalpha); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lalpha); ...
                   Z; ...
                   -krd*DM*DOCrx(:,pindx.lalpha)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % alpha etau
        if (par.opt_alpha & par.opt_etau)
            kk  = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lalpha); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lalpha)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % alpha etad
        if (par.opt_alpha & par.opt_etad)
            kk  = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lalpha); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lalpha)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha bC_T
        if (par.opt_alpha & par.opt_bC_T)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.lalpha); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha bC
        if (par.opt_alpha & par.opt_bC)
            kk = kk + 1;
            tmp = [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.lalpha); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha d
        if (par.opt_alpha & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lalpha); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha Q10C
        if (par.opt_alpha & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lalpha)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha kdC
        if (par.opt_alpha & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lalpha); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lalpha);];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha R_Si
        if (par.opt_alpha & par.opt_R_Si)
            kk  = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lalpha))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lalpha))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_Si*Gx(:,pindx.lalpha))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % alpha rR
        if (par.opt_alpha & par.opt_rR)
            kk  = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lalpha))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lalpha))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_rR*Gx(:,pindx.lalpha))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha cc
        if (par.opt_alpha & par.opt_cc)
            kk  = kk + 1;
            tmp = cc*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lalpha))*C2P_cc; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lalpha))*C2P_cc; ...
                      sigC*d0(Gx(:,pindx.lalpha))*C2P_cc; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lalpha))*C2P_cc; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lalpha))*C2P_cc + ...
                      d0(N2C*Gx(:,pindx.lalpha))*C2P_cc; ...
                      gamma*d0(Gx(:,pindx.lalpha))*C2P_cc; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % alpha dd
        if (par.opt_alpha & par.opt_dd)
            kk = kk + 1;
            tmp = dd*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lalpha))*C2P_dd; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lalpha))*C2P_dd; ...
                      sigC*d0(Gx(:,pindx.lalpha))*C2P_dd; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lalpha))*C2P_dd; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lalpha))*C2P_dd + ...
                      d0(N2C*Gx(:,pindx.lalpha))*C2P_dd; ...
                      gamma*d0(Gx(:,pindx.lalpha))*C2P_dd; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % beta sigC
        if (par.opt_beta & par.opt_sigC)
            kk  = kk + 1;
            tmp = [+sigC*d0(RR*Gx(:,pindx.lbeta))*C2P  ; ...
                   -sigC*d0(Gx(:,pindx.lbeta))*C2P    ; ...
	           +sigC*d0(Gx(:,pindx.lbeta))*C2P     ; ...
                   -sigC*d0(RR*Gx(:,pindx.lbeta))*C2P ; ...
                   2*sigC*d0(RR*Gx(:,pindx.lbeta))*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta kru
        if (par.opt_beta & par.opt_kru)
            kk  = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lbeta); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lbeta); ...
                   Z; ...
                   -kru*UM*DOCrx(:,pindx.lbeta)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % beta krd
        if (par.opt_beta & par.opt_krd)
            kk  = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lbeta); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lbeta); ...
                   Z; ...
                   -krd*DM*DOCrx(:,pindx.lbeta)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % beta etau
        if (par.opt_beta & par.opt_etau)
            kk  = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lbeta); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lbeta)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % beta etad
        if (par.opt_beta & par.opt_etad)
            kk  = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lbeta); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lbeta)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % beta bC_T
        if (par.opt_beta & par.opt_bC_T)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.lbeta); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta bC
        if (par.opt_beta & par.opt_bC)
            kk = kk + 1;
            tmp = [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.lbeta); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta d
        if (par.opt_beta & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lbeta); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta Q10C
        if (par.opt_beta & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lbeta)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta kdC
        if (par.opt_beta & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lbeta); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lbeta)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta R_Si
        if (par.opt_beta & par.opt_R_Si)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lbeta))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_Si*Gx(:,pindx.lbeta))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_Si*Gx(:,pindx.lbeta))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % beta rR
        if (par.opt_beta & par.opt_rR)
            kk = kk + 1;
            tmp = [-d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lbeta))*C2P; ...
                   Z ; ...
                   Z ; ...
                   d0((1-sigC-gamma)*RR_rR*Gx(:,pindx.lbeta))*C2P; ...
                   d0(-2*(1-sigC-gamma)*RR_rR*Gx(:,pindx.lbeta))*C2P; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta cc
        if (par.opt_beta & par.opt_cc)
            kk = kk + 1;
            tmp = cc*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lbeta))*C2P_cc; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lbeta))*C2P_cc; ...
                      sigC*d0(Gx(:,pindx.lbeta))*C2P_cc; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lbeta))*C2P_cc; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lbeta))*C2P_cc + ...
                      d0(N2C*Gx(:,pindx.lbeta))*C2P_cc; ...
                      gamma*d0(Gx(:,pindx.lbeta))*C2P_cc; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % beta dd
        if (par.opt_beta & par.opt_dd)
            kk = kk + 1;
            tmp = dd*[-d0((I+(1-sigC-gamma)*RR)*Gx(:,pindx.lbeta))*C2P_dd; ...
                      (1-sigC-gamma)*d0(Gx(:,pindx.lbeta))*C2P_dd; ...
                      sigC*d0(Gx(:,pindx.lbeta))*C2P_dd; ...
                      d0((1-sigC-gamma)*RR*Gx(:,pindx.lbeta))*C2P_dd; ...
                      d0(-2*(1-sigC-gamma)*RR*Gx(:,pindx.lbeta))*C2P_dd + ...
                      d0(N2C*Gx(:,pindx.lbeta))*C2P_dd; ...
                      gamma*d0(Gx(:,pindx.lbeta))*C2P_dd; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % C model only parameters
        % sigC sigC
        if (par.opt_sigC == on)
            kk = kk + 1;
            tmp = [sigC*RR*G*C2P  ; ...
                   -sigC*G*C2P    ; ...
                   sigC*G*C2P     ; ...
                   -sigC*RR*G*C2P ; ...
                   2*sigC*RR*G*C2P; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigC kru
        if (par.opt_sigC & par.opt_kru == on)
            kk = kk + 1;            
            tmp = kru*[UM*DOCrx(:,pindx.lsigC); ...
                       Z; ...
                       Z; ...
                       Z; ...
                       -N2C*UM*DOCrx(:,pindx.lsigC); ...
                       Z; ...
                       -UM*DOCrx(:,pindx.lsigC)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC krd
        if (par.opt_sigC & par.opt_krd == on)
            kk = kk + 1;
            tmp = krd*[DM*DOCrx(:,pindx.lsigC); ...
                       Z; ...
                       Z; ...
                       Z; ...
                       -N2C*DM*DOCrx(:,pindx.lsigC); ...
                       Z; ...
                       -DM*DOCrx(:,pindx.lsigC)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC etau
        if (par.opt_sigC & par.opt_etau == on)
            kk = kk + 1;
            tmp = [etau*WM*(kC*DOCx(:,pindx.lsigC)); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etau*WM*N2C*(kC*DOCx(:,pindx.lsigC)); ...
                   Z; ...
                   -etau*WM*(kC*DOCx(:,pindx.lsigC))];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC etad
        if (par.opt_sigC & par.opt_etad == on)
            kk = kk + 1;
            tmp = [etad*DM*(kC*DOCx(:,pindx.lsigC)); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etad*N2C*DM*(kC*DOCx(:,pindx.lsigC)); ...
                   Z; ...
                   -etad*DM*(kC*DOCx(:,pindx.lsigC))];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC bC_T
        if (par.opt_sigC & par.opt_bC_T == on)
            kk = kk + 1;
            tmp = [Z; -PFD_bm*POCx(:,pindx.lsigC); Z;  Z; Z; Z; Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigC bC
        if (par.opt_sigC & par.opt_bC == on)
            kk = kk + 1;
            tmp = bC*[Z; -PFD_bb*POCx(:,pindx.lsigC); Z;  Z; Z; Z; Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % sigC d
        if (par.opt_sigC & par.opt_d == on)
            kk = kk + 1;
            tmp = d*[Z; Z; Z; -PFD_d*PICx(:,pindx.lsigC); Z; Z; Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end 
        % sigC Q10C
        if (par.opt_sigC & par.opt_Q10C == on)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lsigC); ...
                   Z; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lsigC); ...
                   Z; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lsigC); ...
                   Z; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lsigC)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC kdC
        if (par.opt_sigC & par.opt_kdC == on)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lsigC); ...
                   Z; ...
                   -kC_kdC*DOCx(:,pindx.lsigC); ...
                   Z;  ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lsigC); ...
                   Z; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lsigC)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC R_Si
        if (par.opt_sigC & par.opt_R_Si == on)
            kk = kk + 1;
            tmp = [sigC*RR_Si*(G*C2P); ...
                   Z; ...
                   Z; ...
                   -sigC*RR_Si*(G*C2P); ...
                   2*sigC*RR_Si*(G*C2P); ...
                   Z; ...
                   Z ];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC rR
        if (par.opt_sigC & par.opt_rR == on)
            kk = kk + 1;
            tmp = [sigC*RR_rR*(G*C2P); ...
                   Z; ...
                   Z; ...
                   -sigC*RR_rR*(G*C2P); ...
                   2*sigC*RR_rR*(G*C2P); ...
                   Z; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC cc
        if (par.opt_sigC & par.opt_cc == on)
            kk = kk + 1;
            tmp = cc*[sigC*RR*(G*C2P_cc); ...
                      -sigC*G*C2P_cc; ...
                      sigC*G*C2P_cc; ...
                      -sigC*RR*(G*C2P_cc); ...
                      2*sigC*RR*(G*C2P_cc) ; ...
                      Z ; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % sigC dd
        if (par.opt_sigC & par.opt_dd == on)
            kk = kk + 1;
            tmp = dd*[sigC*RR*(G*C2P_dd); ...
                      -sigC*G*C2P_dd; ...
                      sigC*G*C2P_dd; ...
                      -sigC*RR*(G*C2P_dd); ...
                      2*sigC*RR*(G*C2P_dd) ; ...
                      Z ; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru kru
        if (par.opt_kru)
            kk = kk + 1;
            tmp = [kru*UM*DOCr ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*kru*UM*DOCr; ...
                   Z ; ...
                   -kru*UM*DOCr] + ...
                  [2*kru*UM*DOCrx(:,pindx.lkru); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -2*N2C*kru*UM*DOCrx(:,pindx.lkru); ...
                   Z ; ...
                   -2*kru*UM*DOCrx(:,pindx.lkru)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru krd
        if (par.opt_kru & par.opt_krd)
            kk = kk + 1;
            tmp = [kru*UM*UM*DOCrx(:,pindx.lkrd); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*kru*UM*DOCrx(:,pindx.lkrd); ...                   
                   Z ; ...
                   -kru*UM*UM*DOCrx(:,pindx.lkrd)] + ...
                  [krd*DM*DOCrx(:,pindx.lkru); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*krd*DM*DOCrx(:,pindx.lkru); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.lkru)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru etau
        if (par.opt_kru & par.opt_etau)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.letau) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*kru*UM*DOCrx(:,pindx.letau); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.letau)] + ...
                  [etau*WM*kC*DOCx(:,pindx.lkru); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lkru); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lkru)] ; 
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru etad
        if (par.opt_kru & par.opt_etad)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.letad) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*kru*UM*DOCrx(:,pindx.letad); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.letad)] + ...
                  [etad*DM*kC*DOCx(:,pindx.lkru); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lkru); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lkru)] ; 
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru bC_T
        if (par.opt_kru & par.opt_bC_T)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.bC_T) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*kru*UM*DOCrx(:,pindx.bC_T); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.bC_T)] + ...
                  [Z ; ...
                   -PFD_bm*POCx(:,pindx.lkru) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru bC
        if (par.opt_kru & par.opt_bC)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lbC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*kru*UM*DOCrx(:,pindx.lbC); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.lbC)] + ...
                  [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.lkru) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru d
        if (par.opt_kru & par.opt_d)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.ld) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.ld); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.ld)] + ...
                  [Z ; ...
                   Z ; ... 
                   Z ; ...
                   -d*PFD_d*PICx(:, pindx.lkru) ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru Q10C
        if (par.opt_kru & par.opt_Q10C)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lQ10C) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lQ10C); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.lQ10C)] + ...
                  [eta*d0(kC_Q10C)*DOCx(:,pindx.lkru); ...
                   Z; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lkru); ...
                   Z; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lkru); ...
                   Z; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lkru)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru kdC
        if (par.opt_kru & par.opt_kdC)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lkdC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lkdC); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.lkdC)] + ...
                  [eta*kC_kdC*DOCx(:,pindx.lkru); ...
                   Z; ...
                   -kC_kdC*DOCx(:,pindx.lkru); ...
                   Z; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lkru); ...
                   Z; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lkru)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru R_Si
        if (par.opt_kru & par.opt_R_Si)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.R_Si) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.R_Si); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.R_Si)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru rR
        if (par.opt_kru & par.opt_rR)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lrR) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lrR); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.lrR)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru cc
        if (par.opt_kru & par.opt_cc)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.lcc) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.lcc); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.lcc)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kru dd 
        if (par.opt_kru & par.opt_dd)
            kk = kk + 1;
            tmp = [kru*UM*DOCrx(:,pindx.ldd) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -kru*N2C*UM*DOCrx(:,pindx.ldd); ...
                   Z ; ...
                   -kru*UM*DOCrx(:,pindx.ldd)] ;

            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd krd
        if (par.opt_krd)
            kk = kk + 1;
            tmp = [krd*DM*DOCr ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*krd*DM*DOCr; ...
                   Z ; ...
                   -krd*DM*DOCr] + ...
                  [2*krd*DM*DOCrx(:,pindx.lkrd); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -2*N2C*krd*DM*DOCrx(:,pindx.lkrd); ...
                   Z ; ...
                   -2*krd*DM*DOCrx(:,pindx.lkrd)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd etau
        if (par.opt_krd & par.opt_etau)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.letau) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*krd*DM*DOCrx(:,pindx.letau); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.letau)] + ...
                  [etau*WM*kC*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   -etau*WM*kC*DOCx(:,pindx.lkrd)] ; 
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd etad
        if (par.opt_krd & par.opt_etad)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.letad) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*krd*DM*DOCrx(:,pindx.letad); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.letad)] + ...
                  [etad*DM*kC*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   Z; ...
                   Z; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   -etad*DM*kC*DOCx(:,pindx.lkrd)] ; 
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd bC_T
        if (par.opt_krd & par.opt_bC_T)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.bC_T) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*krd*DM*DOCrx(:,pindx.bC_T); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.bC_T)] + ...
                  [Z ; ...
                   -PFD_bm*POCx(:,pindx.lkrd) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd bC
        if (par.opt_krd & par.opt_bC)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lbC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -N2C*krd*DM*DOCrx(:,pindx.lbC); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.lbC)] + ...
                  [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.lkrd) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd d
        if (par.opt_krd & par.opt_d)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.ld) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.ld); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.ld)] + ...
                  [Z ; ...
                   Z ; ... 
                   Z ; ...
                   -d*PFD_d*PICx(:, pindx.lkrd) ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd Q10C
        if (par.opt_krd & par.opt_Q10C)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lQ10C) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lQ10C); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.lQ10C)] + ...
                  [eta*d0(kC_Q10C)*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lkrd)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd kdC
        if (par.opt_krd & par.opt_kdC)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lkdC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lkdC); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.lkdC)] + ...
                  [eta*kC_kdC*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   -kC_kdC*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lkrd); ...
                   Z; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lkrd)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd R_Si
        if (par.opt_krd & par.opt_R_Si)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.R_Si) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.R_Si); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.R_Si)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd rR
        if (par.opt_krd & par.opt_rR)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lrR) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lrR); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.lrR)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd cc
        if (par.opt_krd & par.opt_cc)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.lcc) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.lcc); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.lcc)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % krd dd 
        if (par.opt_krd & par.opt_dd)
            kk = kk + 1;
            tmp = [krd*DM*DOCrx(:,pindx.ldd) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -krd*N2C*DM*DOCrx(:,pindx.ldd); ...
                   Z ; ...
                   -krd*DM*DOCrx(:,pindx.ldd)] ;

            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        %%%%%%
        % etau etau
        if (par.opt_etau)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOC ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOC; ...
                   Z ; ...
                   -etau*WM*kC*DOC] + ...
                  [2*etau*WM*kC*DOCx(:,pindx.letau); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -2*etau*WM*N2C*kC*DOCx(:,pindx.letau); ...
                   Z ; ...
                   2*etau*WM*kC*DOCx(:,pindx.letau)];;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau etad
        if (par.opt_etau & par.opt_etad)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.letad); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.letad); ...
                   Z ; ...
                   etau*WM*kC*DOCx(:,pindx.letad)] + ...
                  [etad*DM*kC*DOCx(:,pindx.letau); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.letau); ...
                   Z ; ...
                   etad*DM*kC*DOCx(:,pindx.letau)];;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau bC_T
        if (par.opt_etau & par.opt_bC_T)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.bC_T) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.bC_T); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.bC_T)] + ...
                  [Z ; ...
                   -PFD_bm*POCx(:,pindx.letau) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau bC
        if (par.opt_etau & par.opt_bC)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lbC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lbC); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.lbC)] + ...
                  [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.letau) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau d
        if (par.opt_etau & par.opt_d)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.ld) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.ld); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.ld)] + ...
                  [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.letau) ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau Q10C
        if (par.opt_etau & par.opt_Q10C)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lQ10C) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.lQ10C)] + ...
                  [etau*WM*d0(kC_Q10C)*DOC; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*d0(kC_Q10C)*DOC; ...
                   Z ; ...
                   -etau*WM*d0(kC_Q10C)*DOC] + ...
                  [eta*d0(kC_Q10C)*DOCx(:,pindx.letau) ; ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.letau) ; ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.letau) ; ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.letau)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau kdC
        if (par.opt_etau & par.opt_kdC)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lkdC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.lkdC)] + ...
                  [etau*WM*kC_kdC*DOC; ...
                   Z ; ...
                   Z ; ...
                   Z; ...
                   -etau*WM*N2C*kC_kdC*DOC; ...
                   Z; ...
                   -etau*WM*kC_kdC*DOC] + ...
                  [eta*kC_kdC*DOCx(:,pindx.letau) ; ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.letau) ; ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.letau) ; ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.letau)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau R_Si
        if (par.opt_etau & par.opt_R_Si)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.R_Si) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.R_Si)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau rR
        if (par.opt_etau & par.opt_rR)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lrR) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*kC*N2C*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.lrR)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau cc
        if (par.opt_etau & par.opt_cc)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.lcc) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.lcc)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etau dd 
        if (par.opt_etau & par.opt_dd)
            kk = kk + 1;
            tmp = [etau*WM*kC*DOCx(:,pindx.ldd) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etau*WM*N2C*kC*DOCx(:,pindx.ldd); ...
                   Z ; ...
                   -etau*WM*kC*DOCx(:,pindx.ldd)] ;

            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        %%%%%%
        % etad etad
        if (par.opt_etad)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOC ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOC; ...
                   Z ; ...
                   -etad*DM*kC*DOC] + ...
                  [2*etad*DM*kC*DOCx(:,pindx.letad); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -2*etad*DM*N2C*kC*DOCx(:,pindx.letad); ...
                   Z ; ...
                   2*etad*DM*kC*DOCx(:,pindx.letad)];;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad bC_T
        if (par.opt_etad & par.opt_bC_T)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.bC_T) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.bC_T); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.bC_T)] + ...
                  [Z ; ...
                   -PFD_bm*POCx(:,pindx.letad) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad bC
        if (par.opt_etad & par.opt_bC)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lbC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lbC); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.lbC)] + ...
                  [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.letad) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad d
        if (par.opt_etad & par.opt_d)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.ld) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.ld); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.ld)] + ...
                  [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.letad) ; ...
                   Z ; ...
                   Z ; ...
                   Z ] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad Q10C
        if (par.opt_etad & par.opt_Q10C)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lQ10C) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.lQ10C)] + ...
                  [etad*DM*d0(kC_Q10C)*DOC; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*d0(kC_Q10C)*DOC; ...
                   Z ; ...
                   -etad*DM*d0(kC_Q10C)*DOC] + ...
                  [eta*d0(kC_Q10C)*DOCx(:,pindx.letad) ; ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.letad) ; ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.letad) ; ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.letad)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad kdC
        if (par.opt_etad & par.opt_kdC)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lkdC) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.lkdC)] + ...
                  [etad*DM*kC_kdC*DOC; ...
                   Z ; ...
                   Z ; ...
                   Z; ...
                   -etad*DM*N2C*kC_kdC*DOC; ...
                   Z; ...
                   -etad*DM*kC_kdC*DOC] + ...
                  [eta*kC_kdC*DOCx(:,pindx.letad) ; ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.letad) ; ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.letad) ; ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.letad)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad R_Si
        if (par.opt_etad & par.opt_R_Si)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.R_Si) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.R_Si)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad rR
        if (par.opt_etad & par.opt_rR)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lrR) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*kC*N2C*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.lrR)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad cc
        if (par.opt_etad & par.opt_cc)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.lcc) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.lcc)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % etad dd 
        if (par.opt_etad & par.opt_dd)
            kk = kk + 1;
            tmp = [etad*DM*kC*DOCx(:,pindx.ldd) ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   -etad*DM*N2C*kC*DOCx(:,pindx.ldd); ...
                   Z ; ...
                   -etad*DM*kC*DOCx(:,pindx.ldd)] ;

            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        %%%%%%
        % bC_T bC_T
        if (par.opt_bC_T)
            kk = kk + 1;
            [~,~,Hout] = buildPFD(par,'POC');
            PFD_bm_bm = Hout.PFD_bm_bm;
            par.PFD_bm_bm = PFD_bm_bm;
            tmp = [Z ; ...
                   -PFD_bm_bm*POC-2*PFD_bm*POCx(:,pindx.bC_T);
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T bC
        if (par.opt_bC_T & par.opt_bC)
            kk = kk + 1;
            [~,~,Hout] = buildPFD(par,'POC');
            PFD_bm_bb = Hout.PFD_bm_bb;
            par.PFD_bm_bb = PFD_bm_bb;
            tmp =  [Z ; ...
                    [-bC*PFD_bm_bb*POC - ...
                     PFD_bm*POCx(:,pindx.lbC) - ...
                     bC*PFD_bb*POCx(:,pindx.bC_T)];
                    Z ; ...
                    Z ; ...
                    Z ; ...
                    Z ; ...
                    Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T d
        if (par.opt_bC_T & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.ld); ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.bC_T); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T Q10C
        if (par.opt_bC_T & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.bC_T) ; ...
                   -PFD_bm*POCx(:,pindx.lQ10C); ...
                   -d0(kC_Q10C)*DOCx(:,pindx.bC_T) ; ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.bC_T); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.bC_T)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T kdC
        if (par.opt_bC_T & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.bC_T) ; ...
                   -PFD_bm*POCx(:,pindx.lkdC); ...
                   -kC_kdC*DOCx(:,pindx.bC_T) ; ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.bC_T); ...
                   Z ;
                   (I-eta)*kC_kdC*DOCx(:,pindx.bC_T)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T R_Si
        if (par.opt_bC_T & par.opt_R_Si)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.R_Si); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T rR
        if (par.opt_bC_T & par.opt_rR)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.lrR); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T cc
        if (par.opt_bC_T & par.opt_cc)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.lcc); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC_T dd
        if (par.opt_bC_T & par.opt_dd)
            kk = kk + 1;
            tmp = [Z ; ...
                   -PFD_bm*POCx(:,pindx.ldd); ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        %%%%%%
        % bC bC
        if (par.opt_bC)
            kk = kk + 1;
            [~,~,Hout] = buildPFD(par,'POC');
            PFD_bb_bb = Hout.PFD_bb_bb;
            par.PFD_bb_bb = PFD_bb_bb;
            tmp = bC*[Z; ...
                      -PFD_bb*POC-bC*PFD_bb_bb*POC-2* ...
                      PFD_bb*POCx(:,pindx.lbC); ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC d
        if (par.opt_bC & par.opt_d)
            kk = kk + 1;
            tmp = [Z ; ...
                   -bC*PFD_bb*POCx(:,pindx.ld); ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lbC); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC Q10C
        if (par.opt_bC & par.opt_Q10C)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lbC); ...
                   -bC*PFD_bb*POCx(:,pindx.lQ10C); ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lbC); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lbC); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lbC)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC kdC
        if (par.opt_bC & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lbC); ...
                   -bC*PFD_bb*POCx(:,pindx.lkdC); ...
                   -kC_kdC*DOCx(:,pindx.lbC); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lbC); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lbC)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC R_Si
        if (par.opt_bC & par.opt_R_Si)
            kk = kk + 1;
            tmp = bC*[Z ; ...
                      -PFD_bb*POCx(:,pindx.R_Si); ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC rR
        if (par.opt_bC & par.opt_rR)
            kk = kk + 1;
            tmp = bC*[Z ; ...
                      -PFD_bb*POCx(:,pindx.lrR); ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % bC cc
        if (par.opt_bC & par.opt_cc)
            kk = kk + 1;
            tmp = bC*[Z ; ...
                      -PFD_bb*POCx(:,pindx.lcc); ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end 
        
        % bC dd
        if (par.opt_bC & par.opt_dd)
            kk = kk + 1;
            tmp = bC*[Z ; ...
                      -PFD_bb*POCx(:,pindx.ldd); ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z ; ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        %%%%%%
        % d d
        if (par.opt_d & par.opt_d)
            kk = kk + 1;
            [~,~,Hout] = buildPFD(par,'PIC');
            PFD_d_d = Hout.PFD_d_d;
            par.PFD_d_d = PFD_d_d;
            tmp = d*[Z ; ...
                     Z ; ...
                     Z ; ...
                     [-PFD_d*PIC - d*PFD_d_d*PIC + ...
                      -2*PFD_d*PICx(:,pindx.ld)]; ...
                     Z ; ...
                     Z ; ...
                     Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % d Q10C
            if (par.opt_d & par.opt_Q10C)
                kk = kk + 1;
                tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.ld); ...
                       Z ; ...
                       -d0(kC_Q10C)*DOCx(:,pindx.ld); ...
                       -d*PFD_d*PICx(:,pindx.lQ10C); ...
                       -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.ld); ...
                       Z ; ...
                       (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.ld)];
                    
                Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % d kdC
        if (par.opt_d & par.opt_kdC)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.ld); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.ld); ...
                   -d*PFD_d*PICx(:,pindx.lkdC); ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.ld); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.ld)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % d R_Si
        if (par.opt_d & par.opt_R_Si)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.R_Si); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % d rR
        if (par.opt_d & par.opt_rR)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lrR); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % d cc
        if (par.opt_d & par.opt_cc)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.lcc); ...
                   Z ; ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % d dd
        if (par.opt_d & par.opt_dd)
            kk = kk + 1;
            tmp = [Z ; ...
                   Z ; ...
                   Z ; ...
                   -d*PFD_d*PICx(:,pindx.ldd); ...
                   Z ; ...
                   Z ; ...
                   Z] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        %%%%%%
        % Q10C Q10C
        if (par.opt_Q10C)
            kC_Q10C_Q10C = kC_Q10C + tf.*Q10C.^2.*kdC.*Q10C.^(tf - 2).*(tf - 1) ;
            par.kC_Q10C_Q10C = kC_Q10C_Q10C ;
            kk = kk + 1;
            tmp = [2*eta*d0(kC_Q10C)*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   -2*d0(kC_Q10C)*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   -2*eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   2*(I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lQ10C)] + ...
                  [eta*d0(kC_Q10C_Q10C)*DOC; ...
                   Z ; ...
                   -d0(kC_Q10C_Q10C)*DOC; ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C_Q10C)*DOC; ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C_Q10C)*DOC];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10C kdC
        if (par.opt_Q10C & par.opt_kdC)
            kC_kdC_Q10C = tf .* Q10C .* kdC .* Q10C.^(tf-1);
            par.kC_kdC_Q10C = kC_kdC_Q10C ;
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lkdC)] + ... 
                  [eta*kC_kdC*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lQ10C); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lQ10C)] + ...
                  [eta*d0(kC_kdC_Q10C)*DOC; ...
                   Z ; ...
                   -d0(kC_kdC_Q10C)*DOC; ...
                   Z ; ...
                   -eta*N2C*d0(kC_kdC_Q10C)*DOC; ...
                   Z ; ...
                   (I-eta)*d0(kC_kdC_Q10C)*DOC];

            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % Q10C R_Si
        if (par.opt_Q10C & par.opt_R_Si)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.R_Si)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % Q10C rR
        if (par.opt_Q10C & par.opt_rR)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lrR)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10C cc
        if (par.opt_Q10C & par.opt_cc)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.lcc)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % Q10C dd
        if (par.opt_Q10C & par.opt_dd)
            kk = kk + 1;
            tmp = [eta*d0(kC_Q10C)*DOCx(:,pindx.ldd); ...
                   Z ; ...
                   -d0(kC_Q10C)*DOCx(:,pindx.ldd); ...
                   Z ; ...
                   -eta*N2C*d0(kC_Q10C)*DOCx(:,pindx.ldd); ...
                   Z ; ...
                   (I-eta)*d0(kC_Q10C)*DOCx(:,pindx.ldd)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        %%%%%%
        % kdC kdC
        if (par.opt_kdC)
            kC_kdC_kdC = kC_kdC ;
            par.kC_kdC_kdC = kC_kdC_kdC ;
            kk = kk + 1;
            tmp = [eta*kC_kdC_kdC*DOC ; ...
                   Z ; ...
                   -kC_kdC_kdC*DOC ; ...
                   Z ; ...
                   -eta*N2C*kC_kdC_kdC*DOC; ...
                   Z ; ...
                   (I-eta)*kC_kdC_kdC*DOC] + ...
                  [2*eta*kC_kdC*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   -2*kC_kdC*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   -2*eta*N2C*kC_kdC*DOCx(:,pindx.lkdC); ...
                   Z ; ...
                   2*(I-eta)*kC_kdC*DOCx(:,pindx.lkdC)];;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdC R_Si
        if (par.opt_kdC & par.opt_R_Si)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.R_Si); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.R_Si)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % kdC rR
        if (par.opt_kdC & par.opt_rR)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   -eta*kC_kdC*N2C*DOCx(:,pindx.lrR); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lrR)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdC cc
        if (par.opt_kdC & par.opt_cc)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   -kC_kdC*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.lcc); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.lcc)] ;
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % kdC dd
        if (par.opt_kdC & par.opt_dd)
            kk = kk + 1;
            tmp = [eta*kC_kdC*DOCx(:,pindx.ldd); ...
                   Z; ...
                   -kC_kdC*DOCx(:,pindx.ldd); ...
                   Z ; ...
                   -eta*N2C*kC_kdC*DOCx(:,pindx.ldd); ...
                   Z ; ...
                   (I-eta)*kC_kdC*DOCx(:,pindx.ldd)];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        %%%%%%
        % R_Si R_Si
        if (par.opt_R_Si)
            kk = kk + 1;
            tmp = [Z ; Z ; Z ; Z ; Z; Z; Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end

        % R_Si rR
        if (par.opt_R_Si & par.opt_rR)
            kk = kk + 1;
            tmp = [Z; Z; Z; Z; Z; Z; Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % R_Si cc
        if (par.opt_R_Si & par.opt_cc)
            kk = kk + 1;
            tmp = [-cc*(1-sigC-gamma)*RR_Si*(G*C2P_cc); ...
                   Z ; ...
                   Z ; ...
                   cc*(1-sigC-gamma)*RR_Si*(G*C2P_cc); ...
                   -2*cc*(1-sigC-gamma)*RR_Si*(G*C2P_cc); ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % R_Si dd
        if (par.opt_R_Si & par.opt_dd)
            kk = kk + 1;
            tmp = [-dd*(1-sigC-gamma)*RR_Si*(G*C2P_dd); ...
                   Z ; ...
                   Z ; ...
                   dd*(1-sigC-gamma)*RR_Si*(G*C2P_dd); ...
                   -2*dd*(1-sigC-gamma)*RR_Si*(G*C2P_dd); ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % rR rR
        if (par.opt_rR)
            kk = kk + 1;
            tmp = [-(1-sigC-gamma)*RR_rR*(G*C2P); ...
                   Z ; ...
                   Z ; ...
                   (1-sigC-gamma)*RR_rR*(G*C2P); ...
                   -2*(1-sigC-gamma)*RR_rR*(G*C2P); ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % rR cc
        if (par.opt_rR & par.opt_cc)
            kk = kk + 1;
            tmp = [-cc*(1-sigC-gamma)*RR_rR*(G*C2P_cc); ...
                   Z ; ...
                   Z ; ...
                   cc*(1-sigC-gamma)*RR_rR*(G*C2P_cc); ...
                   -2*cc*(1-sigC-gamma)*RR_rR*(G*C2P_cc); ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % rR dd
        if (par.opt_rR & par.opt_dd)
            kk = kk + 1;
            tmp = [-dd*(1-sigC-gamma)*RR_rR*(G*C2P_dd); ...
                   Z ; ...
                   Z ; ...
                   dd*(1-sigC-gamma)*RR_rR*(G*C2P_dd); ...
                   -2*dd*(1-sigC-gamma)*RR_rR*(G*C2P_dd); ...
                   Z ; ...
                   Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        %%%%%%%
        % cc cc
        if (par.opt_cc)
            kk = kk + 1;
            tmp = cc*[-(I+(1-sigC-gamma)*RR)*(G*(C2P_cc+cc*C2P_cc_cc)); ...
                      (1-sigC-gamma)*G*(C2P_cc+cc*C2P_cc_cc); ...
                      sigC*G*(C2P_cc+cc*C2P_cc_cc); ...
                      (1-sigC-gamma)*RR*(G*(C2P_cc+cc*C2P_cc_cc)); ...
                      -2*(1-sigC-gamma)*RR*(G*(C2P_cc+cc*C2P_cc_cc)) + ...
                      N2C*G*(C2P_cc+cc*C2P_cc_cc); ...
                      gamma*G*(C2P_cc+cc*C2P_cc_cc); ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % cc dd
        if (par.opt_cc & par.opt_dd)
            kk = kk + 1;
            tmp = cc*dd*[-(I+(1-sigC-gamma)*RR)*(G*C2P_cc_dd); ...
                         (1-sigC-gamma)*G*C2P_cc_dd; ...
                         sigC*G*C2P_cc_dd; ...
                         (1-sigC-gamma)*RR*(G*C2P_cc_dd); ...
                         -2*(1-sigC-gamma)*RR*(G*C2P_cc_dd) + N2C*G*C2P_cc_dd; ...
                         gamma*G*C2P_cc_dd; ...
                         Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
        
        % dd dd
        if (par.opt_dd)
            kk = kk + 1;
            tmp = dd*[-(I+(1-sigC-gamma)*RR)*(G*(C2P_dd+dd*C2P_dd_dd)); ...
                      (1-sigC-gamma)*G*(C2P_dd+dd*C2P_dd_dd); ...
                      sigC*G*(C2P_dd+dd*C2P_dd_dd); ...
                      (1-sigC-gamma)*RR*(G*(C2P_dd+dd*C2P_dd_dd)); ...
                      -2*(1-sigC-gamma)*RR*(G*(C2P_dd+dd*C2P_dd_dd)) + ...
                      N2C*G*(C2P_dd+dd*C2P_dd_dd); ...
                      gamma*G*(C2P_dd+dd*C2P_dd_dd); ...
                      Z];
            
            Cxx(:,kk) = mfactor(FD, tmp);
        end
    end
end

